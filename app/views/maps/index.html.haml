!!!
%div#map
%div#search
  %input.css3input{:type=>"text", :name => "addr", :placeholder => "住所、地名を入力してください", :id => "addr", :size => 10}
  %button.css3button{:onclick => 'addr_search()'}検索
  -#　.css3inputと.css3buttonはショートカット。{:class => "css3input"}と同意。
%div#results{:display => "none"}
%div#modalbox
  %a{:href => "#",:id => "close"}x

:css
  body {
    padding: 0;
    margin: 0;
  }
  html, body, #map {
    height: 100%;
  }
  
  #search {
  background-color:transparent;
  position: absolute;
  top: 20px;
  left: 40px;
  width: auto;
  height: auto;
  padding: 10px;
  }
  
  #results {
    position:absolute;
    bottom: 20px;
    left: 40px;
    width:auto;
    height:auto;
    background:white;
  }

  .css3input {
    border:0;
    padding: 10px;
    font-size:1.2em;
    font-family:Arial, sans-serif;
    color:black;
    border:solid 1px #ccc;
    margin:0 0 20px;
    width:300px;
    -moz-box-shadow: inset 1px 4px 9px -6px rgba(0,0,0,0.5);
    -webkit-box-shadow: inset 1px 4px 9px -6px rgba(0, 0, 0, 0.5);
    box-shadow: inset 1px 4px 9px -6px rgba(0,0,0,0.5);
  }
  
  .css3input:focus{
    background-color:#FFD700;
  }
  
  .css3button {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 14px;
  color: #ffffff;
  padding: 10px 20px;
  background: -moz-linear-gradient(
    top,
    #dbe1ff 0%,
    #21c4ff 25%,
    #3300ff);
    background: -webkit-gradient(
    linear, left top, left bottom, 
    from(#dbe1ff),
    color-stop(0.25, #21c4ff),
    to(#3300ff));
    -moz-border-radius: 6px;
    -webkit-border-radius: 6px;
    border-radius: 6px;
    border: 1px solid #4000b8;
    -moz-box-shadow:
    0px 1px 3px rgba(0,0,0,0.5),
    inset 0px -1px 0px rgba(255,255,255,0.7);
    -webkit-box-shadow:
    0px 1px 3px rgba(0,0,0,0.5),
    inset 0px -1px 0px rgba(255,255,255,0.7);
    box-shadow:
    0px 1px 3px rgba(0,0,0,0.5),
    inset 0px -1px 0px rgba(255,255,255,0.7);
    text-shadow:
    0px -1px 1px rgba(000,000,000,0.2),
    0px 1px 0px rgba(255,255,255,0.3);
    }
    
    #showoverlay{margin:25px;}
    
    #modalbox {
    display:none;
    position:absolute;
    z-index:1000;
    width:400px;
    padding:20px;
    background:#fff;
    border:5px solid #eee;
    border-radius:5px;
    -webkit-border-radius:5px;
    -moz-border-radius:5px;
    }

    #close {
    line-height:1;
    font-size:14px;
    position: absolute;
    top:10px;
    right:10px;
    color:red;
    text-decoration:none;
    }
  
:javascript
  
  var feature;
  
  function chooseAddr(lat1, lng1, lat2, lng2, osm_type) {
    var loc1 = new L.LatLng(lat1, lng1);
    var loc2 = new L.LatLng(lat2, lng2);
    var bounds = new L.LatLngBounds(loc1, loc2);

    if (feature) {
      map.removeLayer(feature);
    }
    if (osm_type == "node") {
      feature = L.circle( loc1, 100, {color: 'blue'}).addTo(map);
      map.fitBounds(bounds);
      map.setZoom(18);
    } else {
      var loc3 = new L.LatLng(lat1, lng2);
      var loc4 = new L.LatLng(lat2, lng1);

      feature = L.polyline( [loc1, loc4, loc2, loc3, loc1], {color: 'red'}).addTo(map);
      map.fitBounds(bounds);
    }
  }
  
  function addr_search() {
    var inp = document.getElementById("addr");

    $.getJSON('http://nominatim.openstreetmap.org/search?format=json&limit=5&q=' + inp.value, function(data) {
        var items = [];

        $.each(data, function(key, val) {
            bb = val.boundingbox;
            items.push("<li><a href='#' onclick='chooseAddr(" + bb[0] + ", " + bb[2] + ", " + bb[1] + ", " 
                      + bb[3]  + ", \"" + val.osm_type + "\");return false;'>" + val.display_name + 
                      '</a></li>');
        });
    console.log(data);
    console.log(items);

    $('#results').empty();
        if (items.length != 0) {
            $('<p>', { html: "検索結果" }).appendTo('#results');
            $('<ul/>', {
                'class': 'my-new-list',
                html: items.join('')
            }).appendTo('#results');
        } else {
            $('<p>', { html: "ヒットする情報はありませんでした。他の名称で検索してください" }).appendTo('#results');
        }
    });
  }
  
  L.Icon.Default.imagePath = "/assets";
  var lat = 35.65991663135068;
  var lng = 139.76471178097805;
  var map = L.map('map').setView([lat, lng], 14);
  var osmUrl = "http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png";
  var osmAttrib = "Map data © OpenStreetMap contributors";
  var redIcon = L.icon({
    iconUrl: '/assets/sumi.gif',
    shadowUrl: '/assets/leaf-shadow.png',
    iconSize:     [30, 30],
    shadowSize:   [50, 64]
  });
  var blackIcon = L.icon({
    iconUrl: '/assets/black-icon.png',
    iconSize:     [30, 30],
  });
  
  L.tileLayer(osmUrl, {
    attribution: osmAttrib,
    maxZoom: 18
  }).addTo(map);
  
  
  $.ajax({
    type: "GET",
    url: "/maps.json",
    dataType: "json",
    success: function(maps) {
      for(var i = 0; i < maps.length; i++) {
        var m = maps[i];
        var type = m.customer_type;
        
        if(type == 1){
          var marker = L.marker([m.latitude, m.longitude], {icon:redIcon}).addTo(map);
          var cstmr_type = "既存契約";
        }else if(type == 2){
          var marker = L.marker([m.latitude, m.longitude], {icon:blackIcon}).addTo(map);
          var cstmr_type = "ブラック";
        }
        var com = m.company_name;
        var addr = m.company_address;
        var cnt = m.contract_num;
        var type = m.customer_type;
        var service = "おとくライン";

        marker.bindPopup("会社名：" + com + '<br />' + "住所：" + addr + 
        '<br />' + "契約商品：" + service　+ '<br />' + "契約数：" + cnt +'<br />' + "お客様タイプ：" + cstmr_type);
        console.log(m);
      }
    }
  });
